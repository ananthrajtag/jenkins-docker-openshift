global:
  image:
    registry: ""

rbac:
  create: true
  roleBindings: 
    - name: "admin"
    - name: "self-provisioner"
      kind: ClusterRoleBinding
  serviceAccount:
    create: true
    name: "jenkins"

master:
  name: jenkins-master
  image: "jenkins-openshift"
  imageTag: "latest"
  imagePullPolicy: "Always"
  component: "jenkins-master"
  useSecurity: true
# adminUser: admin
# adminPassword: <defaults to random>
# adminPassword: admin
  cpu: "200m"
  memory: "512Mi"
# Set min/max heap here if needed with:
# javaOpts: "-Xms512m -Xmx512m"
#    javaOpts: >
#      -Dhudson.slaves.NodeProvisioner.initialDelay=0
#      -Dhudson.slaves.NodeProvisioner.MARGIN=50
#      -Dhudson.slaves.NodeProvisioner.MARGIN0=0.85
#      -Djenkins.displayurl.provider=org.jenkinsci.plugins.blueoceandisplayurl.BlueOceanDisplayURLImpl
# jenkinsOpts: ""
# jenkinsUriPrefix: "/jenkins"
  servicePort: 80
# For minikube, set this to NodePort, elsewhere use LoadBalancer
# Use ClusterIP if your setup includes ingress controller
  serviceType: ClusterIP
# Master Service annotations
  serviceAnnotations: {}
    #   service.beta.kubernetes.io/aws-load-balancer-backend-protocol: https
    # fabric8.io/expose: "true"
# Used to create Ingress record (should used with ServiceType: ClusterIP)
# HostName: jenkins.cluster.local
# NodePort: <to set explicitly, choose port between 30000-32767
  env:
    JENKINS_PASSWORD: admin
    CASC_JENKINS_CONFIG: /config/casc
  containerPort: 8080
  slaveListenerPort: 50000
  nodeSelector: {}
  tolerations: {}
  # Overwrite the base jenkins config and any plugins during upgrades
  overwrite:
    plugins: true
    config: true
  # Health probes
  healthProbes:
    liveness: 
      initialDelay: 420
      timeout: 3
      failureThreshold: 30
    readiness: 
      initialDelay: 3
      timeout: 3
      failureThreshold: 5
  persistence:
    enabled: "true"
    size: "5Gi"
    accessMode: "ReadWriteOnce"
    volumes:
      - name: jenkins-casc
        configMap: 
          name: jenkins-casc
    mounts:
      - name: jenkins-casc
        mountPath: /config/casc
        readOnly: true
  oauth:
    enabled: "true"
  ingress:
    annotations:
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    tls:
      # - secretName: jenkins.cluster.local
      #   hosts:
      #     - jenkins.cluster.local
  route:
    enabled: false
    annotations:
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge

servers:
  bitbucketCloud:
  #- name: myname
  #  url: https://something.com/
  #  credential: some-cred-name

  bitbucketServer:
  #- name: myname
  #  url: https://something.com/
  #  credential: some-cred-name

  ghe:
  #- name: myname
  #  url: https://something.com/
  #  credential: some-cred-name

  gitea:
  #- name: myname
  #  url: https://something.com/
  #  credential: some-cred-name

  gitLab:
  #- name: myname
  #  url: https://something.com/
  #  credential: some-cred-name

agent:
  enabled: true
  component: "jenkins-agent"
  containerCap: 0
  # Key Value selectors. Ex:
  # jenkins-agent: v1
  podTemplates:
    jnlp:
      name: jnlp
      label: jnlp
      serviceAccount: jenkins
      containers:
        jnlp:
          image: "jenkins-openshift-jnlp"
          imageTag: "latest"
          resources:
            requestCpu: "100m"
            requestMemory: "128Mi"
          command: "/usr/local/bin/run-jnlp-client"
      env:
        CHARTMUSEUM_URL: http://chartmuseum:8080
        CHARTMUSEUM_USERNAME: admin
        CHARTMUSEUM_PASSWORD: admin
        GIT_COMMITTER_EMAIL: jenkins@example.com
        GIT_AUTHOR_EMAIL: jenkins@example.com
        GIT_COMMITTER_NAME: jenkins
        GIT_AUTHOR_NAME: jenkins
        XDG_CONFIG_HOME: /home/jenkins
    base:
      name: base
      label: base
      serviceAccount: jenkins
      inheritFrom: "jnlp"
      containers:
        base:
          name: base
          image: "jenkins-builder-base"
          imageTag: "latest"
          resources:
            requestCpu: "100m"
            requestMemory: "192Mi"
            limitCpu: "1"
            limitMemory: "512Mi"
          command: "/usr/local/bin/run"
          args: cat
          ttyEnabled: true
    gradle:
      name: gradle
      label: gradle
      inheritFrom: "jnlp"
      serviceAccount: jenkins
      containers:
        gradle:
          name: gradle
          image: "jenkins-builder-gradle"
          imageTag: "latest"
          env:
            _JAVA_OPTIONS: '-Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -XX:MaxRAMPercentage=50'
            GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.parallel=false -Dorg.gradle.workers.max=1'
            MAVEN_MIRROR_URL: "http://nexus3:8081/repository/maven-public"
            MAVEN_PUBLISH_SNAPSHOT_URL: "http://nexus3:8081/repository/maven-snapshots"
            MAVEN_PUBLISH_URL: "http://nexus3:8081/repository/maven-releases"
            MAVEN_PUBLISH_USERNAME: "jenkins"
            MAVEN_PUBLISH_PASSWORD: "jenkins"
          resources:
            requestCpu: "400m"
            requestMemory: "512Mi"
            limitCpu: "2"
            limitMemory: "2048Mi"
          command: "/usr/local/bin/run"
          args: cat
          ttyEnabled: true
    nodejs:
      name: nodejs
      label: nodejs
      inheritFrom: jnlp
      serviceAccount: jenkins
      containers:
        nodejs:
          name: nodejs
          image: "jenkins-builder-nodejs"
          imageTag: "latest"
          env:
            CI: "true"
            NPM_MIRROR_URL: "http://nexus3:8081/repository/npm-public/"
            NPM_PUBLISH_URL: "http://nexus3:8081/repository/npm-releases/"
            NPM_PUBLISH_TOKEN: "NpmToken.b5505337-ffb2-3fac-8b3a-fcd81b8bb8fb"
          resources:
            requestCpu: "400m"
            requestMemory: "512Mi"
            limitCpu: "2"
            limitMemory: "2048Mi"
          command: "/usr/local/bin/run"
          args: cat
          ttyEnabled: true
    gradleNodejs:
      name: gradle-nodejs
      label: gradle-nodejs
      inheritFrom: "gradle nodejs"
      serviceAccount: jenkins