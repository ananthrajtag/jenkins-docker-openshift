apiVersion: v1
kind: Template
metadata:
  labels:
    template: jenkins-slave-gradle-template
    role: jenkins-slave
  name: jenkins-slave-gradle
objects:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
      role: jenkins-slave
    name: jenkins-slave-gradle
  data:
    gradle: |-
      <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
        <inheritFrom></inheritFrom>
        <name>gradle</name>
        <instanceCap>2147483647</instanceCap>
        <idleMinutes>0</idleMinutes>
        <label>gradle</label>
        <serviceAccount>jenkins</serviceAccount>
        <nodeSelector></nodeSelector>
        <volumes/>
        <containers>
          <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
            <name>jnlp</name>
            <image>${IMAGE}</image>
            <privileged>false</privileged>
            <alwaysPullImage>false</alwaysPullImage>
            <workingDir>/tmp</workingDir>
            <command></command>
            <args>${computer.jnlpmac} ${computer.name}</args>
            <ttyEnabled>false</ttyEnabled>
            <resourceRequestCpu></resourceRequestCpu>
            <resourceRequestMemory></resourceRequestMemory>
            <resourceLimitCpu></resourceLimitCpu>
            <resourceLimitMemory></resourceLimitMemory>
            <envVars/>
          </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
        </containers>
        <envVars>
          <org.csanchez.jenkins.plugins.kubernetes.PodEnvVar>
            <key>MAVEN_MIRROR_URL</key>
            <value>${MAVEN_MIRROR_URL}</value>
          </org.csanchez.jenkins.plugins.kubernetes.PodEnvVar>
          <org.csanchez.jenkins.plugins.kubernetes.PodEnvVar>
            <key>MAVEN_PUBLISH_SNAPSHOT_URL</key>
            <value>${MAVEN_PUBLISH_SNAPSHOT_URL}</value>
          </org.csanchez.jenkins.plugins.kubernetes.PodEnvVar>
          <org.csanchez.jenkins.plugins.kubernetes.PodEnvVar>
            <key>MAVEN_PUBLISH_URL</key>
            <value>${MAVEN_PUBLISH_URL}</value>
          </org.csanchez.jenkins.plugins.kubernetes.PodEnvVar>
          <org.csanchez.jenkins.plugins.kubernetes.PodEnvVar>
            <key>MAVEN_PUBLISH_USERNAME</key>
            <value>${MAVEN_PUBLISH_USERNAME}</value>
          </org.csanchez.jenkins.plugins.kubernetes.PodEnvVar>
          <org.csanchez.jenkins.plugins.kubernetes.PodEnvVar>
            <key>MAVEN_PUBLISH_PASSWORD</key>
            <value>${MAVEN_PUBLISH_PASSWORD}</value>
          </org.csanchez.jenkins.plugins.kubernetes.PodEnvVar>
        </envVars>
        <annotations/>
        <imagePullSecrets/>
        <nodeProperties/>
      </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
parameters:
- name: MAVEN_MIRROR_URL
  description: "Maven mirror url from where jenkins will download artifacts"
  required: true
  value: "http://nexus3.cicd:8081/repository/maven-public"
- name: MAVEN_PUBLISH_SNAPSHOT_URL
  description: "Maven repository url to where jenkins will upload snapshots artifacts"
  required: true
  value: "http://nexus3.cicd:8081/repository/maven-snapshots"
- name: MAVEN_PUBLISH_URL
  description: "Maven repository url to where jenkins will upload releases artifacts"
  required: true
  value: "http://nexus3.cicd:8081/repository/maven-releases"
- name: MAVEN_PUBLISH_USERNAME
  description: "Username used when upload artifacts"
  required: true
  value: "jenkins"
- name: MAVEN_PUBLISH_PASSWORD
  description: "Password used when upload artifacts"
  required: true
  value: "jenkins"
- name: IMAGE
  description: |-
    Docker image reference of the gradle slave.
    You can use imagestreamtag:<namespace>/<imagestream>:<tag> if you want to use
    an imagestreamtag as a reference for this
  required: true
  value: "imagestreamtag:cicd/jenkins-slave-gradle-centos7:latest"
